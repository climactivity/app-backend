## TODO .env Config wird noch nicht in der Nest anwendung geladen, ich habe so was schon mal gebaut, das muss noch rÃ¼ber kopiert werden 
version: "3.8"
services:
  frontend:
    build: ./site
    image: de.climactivity.frontend:0.1.0
    restart: always
    volumes:
      - ./log_frontend:/var/log/nginx
      - ./img:/var/img
    networks:
      - main
    depends_on:
      - backend
    ports:
      - 8080:80
    environment: 
      LOCALIZATION_LINK: ${LOCALIZATION_LINK}
    env_file:
       - .env
    
  backend:
    build: ./server
    image: de.climactivity.backend:0.1.0
    restart: always
    volumes:
      - ./log_backend:/var/log
      - ./img:/var/img
    links:
      - db
    networks:
      - main
    depends_on:
      - db
    environment:
      SERVE_STATIC: "false"
      DB_HOST: db
      DB_PORT: 27017
      IMG_DIR: /var/img
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGODB_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGODB_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGODB_DATABASE: ${MONGO_INITDB_DATABASE}
    env_file: 
      - .env

  db: 
    image: bitnami/mongodb:latest
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGODB_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGODB_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGODB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - 27017:27017
    volumes:
      # named volumes
      - mongoconfig:/data/configdb
      - ./mongodb_data_container:/data/db
      - ./mongoshell:/home/mongodb/
    networks:
      - main

  cockroachdb:
    image: cockroachdb/cockroach:latest-v20.2
    command: start-single-node --insecure --store=attrs=ssd,path=/var/lib/cockroach/
    restart: "no"
    volumes:
      - data:/var/lib/cockroach
    expose:
      - "8080"
      - "26257"
    ports:
      - "26257:26257"
      - "8082:8080"

  nakama:
    image: heroiclabs/nakama:3.2.1
    entrypoint:
      - "/bin/sh"
      - "-ecx"
      - >
        /nakama/nakama migrate up --database.address root@cockroachdb:26257 &&
        exec /nakama/nakama --config /nakama/data/config.yml
    restart: "on-failure:10"
    links:
      - "cockroachdb:db"
    depends_on:
      - cockroachdb
      - prometheus
    volumes:
      - ./:/nakama/data
    expose:
      - "7349"
      - "7350"
      - "7351"
      - "9100"
    ports:
      - "7349:7349"
      - "7350:7350"
      - "7351:7351"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7350/"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    entrypoint: /bin/sh -c
    command: |
      'sh -s <<EOF
        cat > ./prometheus.yml <<EON
      global:
        scrape_interval:     15s
        evaluation_interval: 15s
      scrape_configs:
        - job_name: prometheus
          static_configs:
          - targets: ['localhost:9090']
        - job_name: nakama
          metrics_path: /
          static_configs:
          - targets: ['nakama:9100']
      EON
      prometheus --config.file=./prometheus.yml
      EOF'
    ports:
      - '9090:9090'
    
      
volumes:
  mongoconfig: {}
  mongoshell: {}
  data:

networks:
  main:
    driver: bridge